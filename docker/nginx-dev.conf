# Development nginx configuration with HTTPS

upstream frontend {
    server frontend:80;
}

upstream backend {
    server backend:8000;
}

# HTTP - redirect to HTTPS
server {
    listen 80;
    server_name dev.roberthauta.com;
    return 301 https://$server_name$request_uri;
}

# HTTPS - Development environment
server {
    listen 443 ssl;
    server_name dev.roberthauta.com;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/dev.roberthauta.com.crt;
    ssl_certificate_key /etc/nginx/ssl/dev.roberthauta.com.key;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Root path - serve frontend
    location / {
        proxy_pass http://frontend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for Vite HMR
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # Backend API routes - serve at /api
    location /api {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
