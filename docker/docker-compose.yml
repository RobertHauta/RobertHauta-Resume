version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: resume-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: resume_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - resume-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: resume-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env.backend
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ../backend/app:/app/app
    networks:
      - resume-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: resume-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    env_file:
      - .env.frontend
    depends_on:
      - backend
    networks:
      - resume-network

  # Nginx Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: resume-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # For SSL certificates (uncomment when ready)
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - resume-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  resume-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local