name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy-prod:
    name: Deploy Production Environment
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.backend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/resume-backend:latest
            ghcr.io/${{ github.repository_owner }}/resume-backend:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/resume-backend:latest
          cache-to: type=inline

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.frontend
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/resume-frontend:latest
            ghcr.io/${{ github.repository_owner }}/resume-frontend:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/resume-frontend:latest
          cache-to: type=inline

      - name: Deploy to Production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /opt/resume-app

            # Create backend environment file
            cat << 'EOF' > docker/.env.backend.prod
            MONGODB_URL=${{ secrets.PROD_MONGODB_URL }}
            MONGODB_DB_NAME=${{ vars.PROD_MONGODB_DB_NAME }}
            SECRET_KEY=${{ secrets.PROD_SECRET_KEY }}
            ALGORITHM=${{ vars.ALGORITHM }}
            ACCESS_TOKEN_EXPIRE_MINUTES=${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
            API_V1_PREFIX=${{ vars.API_V1_PREFIX }}
            PROJECT_NAME=${{ vars.PROD_PROJECT_NAME }}
            BACKEND_CORS_ORIGINS=${{ vars.PROD_CORS_ORIGINS }}
            EOF

            # Set GitHub container registry credentials
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull and restart services
            cd docker
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            docker system prune -af

      - name: Health check
        run: |
          sleep 30
          curl -f https://roberthauta.com/health || exit 1

      - name: Notify deployment
        if: success()
        run: echo "ðŸš€ Production deployment successful!"